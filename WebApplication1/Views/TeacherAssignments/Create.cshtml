@model WebApplication1.Models.TeacherAssignment
@{
    ViewData["Title"] = "Добавить назначение";
}

<div class="container mt-4">
    <div class="card shadow-sm border-0 rounded-4">
        <div class="card-header bg-success text-white">
            <h3 class="mb-0">➕ Добавить назначение преподавателю</h3>
        </div>

        <div class="card-body">
            <form asp-action="Create" method="post">
                <div asp-validation-summary="All" class="alert alert-danger"></div>

                <!-- Выбор курса -->
                <div class="mb-3">
                    <label asp-for="CourseId" class="form-label fw-semibold">Курс</label>
                    <select asp-for="CourseId" class="form-select" asp-items="ViewBag.CourseId" id="courseSelect">
                        <option value="">-- Выберите курс --</option>
                    </select>
                    <span asp-validation-for="CourseId" class="text-danger"></span>
                </div>

                <!-- Выбор преподавателя -->
                <div class="mb-3">
                    <label asp-for="TeacherId" class="form-label fw-semibold">Преподаватель</label>
                    <select asp-for="TeacherId" class="form-select" asp-items="ViewBag.TeacherId">
                        <option value="">-- Выберите преподавателя --</option>
                    </select>
                    <span asp-validation-for="TeacherId" class="text-danger"></span>
                </div>

                <!-- Дата начала -->
                <div class="mb-3">
                    <label asp-for="StartDate" class="form-label fw-semibold">Дата начала курса</label>
                    <input asp-for="StartDate" type="date" class="form-control" id="startDate" />
                    <span asp-validation-for="StartDate" class="text-danger"></span>
                </div>

                <!-- Автоматический расчёт даты окончания -->
                <div id="autoEndDate" class="alert alert-info d-none mt-3">
                    <strong>📅 Курс завершится:</strong> <span id="calculatedEnd"></span>
                </div>

                <button type="submit" class="btn btn-success w-100 fw-semibold mt-3">
                    💾 Создать назначение
                </button>
            </form>
        </div>

        <div class="card-footer bg-light text-end">
            <a asp-action="Index" class="btn btn-outline-secondary">← Назад к списку</a>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        const courseSelect = document.getElementById('courseSelect');
        const startInput = document.getElementById('startDate');
        const endInfo = document.getElementById('autoEndDate');
        const endLabel = document.getElementById('calculatedEnd');

        // Функция расчёта даты окончания
        async function calculateEndDate() {
            const courseId = courseSelect.value;
            const startDate = startInput.value;

            if (!courseId || !startDate) {
                endInfo.classList.add('d-none');
                return;
            }

            try {
                const response = await fetch(`/TeacherAssignments/GetCourseDays?id=${courseId}`);
                const days = await response.json();

                if (!isNaN(days) && days > 0) {
                    const start = new Date(startDate);
                    const end = new Date(start);
                    end.setDate(start.getDate() + (days - 1));

                    const formatted = end.toLocaleDateString('ru-RU', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                    });

                    endLabel.textContent = formatted;
                    endInfo.classList.remove('d-none');
                } else {
                    endInfo.classList.add('d-none');
                }
            } catch (err) {
                console.error("Ошибка загрузки длительности курса:", err);
                endInfo.classList.add('d-none');
            }
        }

        // Отслеживаем изменение курса или даты начала
        courseSelect.addEventListener('change', calculateEndDate);
        startInput.addEventListener('change', calculateEndDate);
    </script>
}
